import React, { useEffect, useState } from 'react';
import { Container, Row, Col, Card, ListGroup, Dropdown } from 'react-bootstrap';
import { Link } from 'react-router-dom';
import axios from 'axios';

function CatalogScreen() {
  const [games, setGames] = useState([]);
  const [categories, setCategories] = useState([]);
  const [selectedCategoryId, setSelectedCategoryId] = useState(null);
  const [sortBy, setSortBy] = useState(null);

  useEffect(() => {
    const fetchGames = async () => {
      try {
        const response = await axios.get('http://localhost:3000/api/game/games', {
          params: { categoryId: selectedCategoryId, sortBy }
        });
        setGames(response.data);
      } catch (error) {
        console.error('Ошибка при получении данных:', error);
      }
    };

    fetchGames();
  }, [selectedCategoryId, sortBy]);

  useEffect(() => {
    const fetchCategories = async () => {
      try {
        const response = await axios.get('http://localhost:3000/api/category/categories');
        setCategories(response.data);
      } catch (error) {
        console.error('Ошибка при получении категорий:', error);
      }
    };

    fetchCategories();
  }, []);

  const handleCategorySelect = (categoryId) => {
    setSelectedCategoryId(categoryId);
  };

  const handleSortSelect = (sortBy) => {
    setSortBy(sortBy);
  };

  return (
    <>
      <Container className="min-vh-100 py-4 mt-4" style={{borderRadius:'10px', backgroundColor: '#272727', color: '#272727'}}>
        <Row>
          <Col md={3} className="mb-4" style={{backgroundColor:'#272727'}}>
            <h4 className="mb-3 text-center" style={{color: '#fff'}}>Выберите категорию</h4>
            <ListGroup variant="flush" className="bg-transparent">
              <ListGroup.Item
                action
                className={`text-white border-1 mb-1 rounded text-center ${selectedCategoryId === null ? 'bg-success' : ''}`}
                style={{borderColor:'#747474', background: 'transparent'}}
                onClick={() => handleCategorySelect(null)}
              >
                Все
              </ListGroup.Item>
              {categories.map((category) => (
                <ListGroup.Item
                  key={category.id}
                  action
                  className={`text-white border-1 mb-1 rounded text-center ${selectedCategoryId === category.id ? 'bg-success' : ''}`}
                  style={{borderColor:'#747474', background: 'transparent'}}
                  onClick={() => handleCategorySelect(category.id)}
                >
                  {category.name}
                </ListGroup.Item>
              ))}
            </ListGroup>
          </Col>

          <Col md={9}>
            <Dropdown onSelect={handleSortSelect} className='mb-2'>
              <Dropdown.Toggle variant="success" id="dropdown-basic">
                Сортировать по
              </Dropdown.Toggle>
              <Dropdown.Menu>
                <Dropdown.Item eventKey="year">Году производства</Dropdown.Item>
                <Dropdown.Item eventKey="name">Наименованию</Dropdown.Item>
                <Dropdown.Item eventKey="price">Цене</Dropdown.Item>
              </Dropdown.Menu>
            </Dropdown>
            <Row>
              {games.map((game) => (
                <Col md={4} className="mb-4" key={game.id}>
                  <Link to={`/game-details/${game.id}`} className='text-decoration-none'>
                    <Card className="border-1" style={{backgroundColor:'#2C2C2C', color: '#fff', borderColor:'#747474'}}>
                      <Card.Img variant="top" src={`http://localhost:3000/uploads/${game.img}`} style={{height: '300px', objectFit: 'cover'}} alt={game.name} />
                      <Card.Body>
                        <Card.Title className="text-center" style={{color: '#fff'}}>{game.name}</Card.Title>
                        <Card.Text style={{color: '#fff'}}>
                          Описание: {game.description}
                        </Card.Text>
                        <Card.Text style={{color: '#fff'}}>
                          Цена: {game.price}р.
                        </Card.Text>
                        <Card.Text style={{color: '#fff'}}>
                          Год: {game.year}
                        </Card.Text>
                        <Card.Text style={{color: '#fff'}}>
                          Категория: {game.category.name}
                        </Card.Text>
                      </Card.Body>
                    </Card>
                  </Link>
                </Col>
              ))}
            </Row>
          </Col>
        </Row>
      </Container>
    </>
  );
}

export default CatalogScreen;
