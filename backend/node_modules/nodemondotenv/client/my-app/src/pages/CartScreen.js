import React, { useState } from 'react';
import { Container, Row, Col, Card, Button, Form } from 'react-bootstrap';
import { useCart } from '../components/CartContext';
import axios from 'axios';
import {useNavigate} from 'react-router-dom'

function CartScreen() {
  const { cartItems, removeFromCart, incrementItemQuantity, decrementItemQuantity, clearCart } = useCart();
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleIncrement = (item) => {
    if (item.quantity < item.inStock) {
      incrementItemQuantity(item.id);
    } else {
      alert('Невозможно добавить больше товаров, чем есть в наличии.');
    }
  };

  const handleDecrement = (item) => {
    if (item.quantity > 1) {
      decrementItemQuantity(item.id);
    } else {
      removeFromCart(item.id);
    }
  };

  const placeOrder = async () => {
    try {
        const response = await axios.post('http://localhost:3000/api/user/order', { password, cartItems }, {
            headers: {
                Authorization: `Bearer ${localStorage.getItem('token')}`
            }
        });
        console.log('Заказ успешно сформирован:', response.data);
        navigate('/lk')
        clearCart();
        setError('');
    } catch (error) {
        console.error('Ошибка при формировании заказа:', error);
        setError('Неверный пароль');
    }
  };

  return (
    <Container className="min-vh-100 py-4 mt-4" style={{borderRadius:'10px', backgroundColor: '#272727', color: '#272727'}}>
      <Row>
        <Col>
          <h2 className="text-center mb-4" style={{color: '#fff'}}>Корзина</h2>
          {cartItems.length === 0 ? (
            <p className="text-center" style={{color: '#fff'}}>Ваша корзина пуста</p>
          ) : (
            <>
              {cartItems.map((item) => (
                <Card key={item.id} className="mb-3" style={{backgroundColor:'#2C2C2C', color: '#fff', borderColor:'#747474'}}>
                  <Card.Body>
                    <Row>
                      <Col md={4}>
                        <Card.Img variant="top" src={`http://localhost:3000/uploads/${item.img}`} alt={item.name} style={{height: '150px', objectFit: 'cover'}} />
                      </Col>
                      <Col md={8}>
                        <Card.Title style={{color: '#fff'}}>{item.name}</Card.Title>
                        <Card.Text style={{color: '#fff'}}>Цена: {item.price}р.</Card.Text>
                        <Card.Text style={{color: '#fff'}}>Количество: {item.quantity}</Card.Text>
                        <Card.Text style={{color: '#fff'}}>В наличии: {item.inStock}</Card.Text>
                        <Button variant="success" className="mr-2" onClick={() => handleIncrement(item)}>+</Button>
                        <Button variant="danger" className="mr-2" onClick={() => handleDecrement(item)}>-</Button>
                        <Button variant="danger" onClick={() => removeFromCart(item.id)}>Удалить</Button>
                      </Col>
                    </Row>
                  </Card.Body>
                </Card>
              ))}
              <Button variant="danger" className="w-100" onClick={clearCart}>Очистить корзину</Button>
              <Form className="mt-3">
                <Form.Group controlId="formPassword">
                  <Form.Label style={{color: '#fff'}}>Пароль</Form.Label>
                  <Form.Control
                    type="password"
                    placeholder="Введите пароль"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                  />
                </Form.Group>
                {error && <p style={{color: 'red'}}>{error}</p>}
                <Button variant="success" className="w-100 mt-2" onClick={placeOrder}>Сформировать заказ</Button>
              </Form>
            </>
          )}
        </Col>
      </Row>
    </Container>
  );
}

export default CartScreen;
