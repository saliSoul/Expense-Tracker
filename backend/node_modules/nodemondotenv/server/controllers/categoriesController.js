const { Categories } = require('../models/models'); // Путь к вашим моделям

class CategoryController {
    // Метод для добавления новой категории
    async createCategory(req, res) {
        try {
            const { name } = req.body;
            const newCategory = await Categories.create({ name });
            res.status(201).json(newCategory);
        } catch (error) {
            res.status(500).json({ message: 'Ошибка при создании категории', error });
        }
    }

    // Метод для получения всех категорий
    async getAllCategories(req, res) {
        try {
            const categories = await Categories.findAll();
            res.status(200).json(categories);
        } catch (error) {
            res.status(500).json({ message: 'Ошибка при получении категорий', error });
        }
    }

    // Метод для получения одной категории по ID
    async getCategoryById(req, res) {
        try {
            const { id } = req.params;
            const category = await Categories.findByPk(id);
            if (!category) {
                return res.status(404).json({ message: 'Категория не найдена' });
            }
            res.status(200).json(category);
        } catch (error) {
            res.status(500).json({ message: 'Ошибка при получении категории', error });
        }
    }

    // Метод для изменения категории по ID
    async updateCategory(req, res) {
        try {
            const { id } = req.params;
            const { name } = req.body;
            const [updated] = await Categories.update({ name }, { where: { id } });
            if (!updated) {
                return res.status(404).json({ message: 'Категория не найдена' });
            }
            const updatedCategory = await Categories.findByPk(id);
            res.status(200).json(updatedCategory);
        } catch (error) {
            res.status(500).json({ message: 'Ошибка при обновлении категории', error });
        }
    }

    // Метод для удаления категории по ID
    async deleteCategory(req, res) {
        try {
            const { id } = req.params;
            const deleted = await Categories.destroy({ where: { id } });
            if (!deleted) {
                return res.status(404).json({ message: 'Категория не найдена' });
            }
            res.status(200).json({ message: 'Категория удалена' });
        } catch (error) {
            res.status(500).json({ message: 'Ошибка при удалении категории', error });
        }
    }
}

module.exports = new CategoryController();
